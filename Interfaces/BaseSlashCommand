import { LocalizationMap, RESTPostAPIApplicationCommandsJSONBody, APIChatInputApplicationCommandInteraction, APIApplicationCommandAutocompleteInteraction } from '@discordjs/core';


export interface BaseSlashCommand {
    /** Command's Name, in fulllowercase (can include hyphens) */
    name: String,

    /** Command's Description */
    description: String,

    /** Command's Localised Descriptions */
    localizedDescriptions?: LocalizationMap | null,

    /** Command's cooldown, in seconds (whole number integers!) */
    cooldown: Number,

    // Since I am silly and cannot figure out how to define this:
    //subcommandCooldown: { "exampleName": Number }
    // Where "exampleName" is either the Subcommand's Name, or a combo of both Subcommand Group Name and Subcommand Name
    // In either "subcommandName" or "groupName_subcommandName" formats
    

    /** Get the Command's data in a format able to be registered with via Discord's API */
    getRegisterData(): RESTPostAPIApplicationCommandsJSONBody,

    /** Handles given Autocomplete Interactions, should this Command use Autocomplete Options
     * @param {APIApplicationCommandAutocompleteInteraction} interaction 
     */
    handleAutoComplete(interaction: APIApplicationCommandAutocompleteInteraction): any,

    /** Runs the Command
     * @param {APIChatInputApplicationCommandInteraction} interaction 
     */
    executeCommand(interaction: APIChatInputApplicationCommandInteraction): any
}
